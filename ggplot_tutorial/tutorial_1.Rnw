\documentclass{beamer}
\usepackage[]{graphicx, parskip, microtype, hyperref}

\frenchspacing

\usetheme{default}
\usecolortheme{orchid}

<<opts-set, message = FALSE, echo = FALSE>>=
require(knitr)
options(width = 60)
opts_chunk$set(echo = TRUE, highlight = TRUE, results = 'markup')

require(ggplot2)
@

\title{ggplot2: a philosophy and a package}
\author{Peter D Smits}
\institute{Committee on Evolutionary Biology \\
University of Chicago}
\date{\today}

\begin{document}

\begin{frame}
  \maketitle
\end{frame}

\begin{frame}
  \frametitle{Introduction}

  there are three main ways of making graphics in R:\\
  base graphics, lattice, grid, ggplot2.

  ggplot2 is an implementation of the Grammar of Graphics by Leland Wilkinson.

  extremely popular, huge community, extremely powerful, slow.

\end{frame}

\begin{frame}
  \includegraphics[width = \textwidth, keepaspectratio = true]{figure/bike_ggplot}

\end{frame}

\begin{frame}
  \frametitle{Hadley Wickham}

  \begin{columns}
    \begin{column}{0.5\textwidth}
      \begin{itemize}
        \item statistics professor at Rice University
        \item from New Zealand (oddly common in statistics)
        \item author of many R packages (ggplot2, reshape2, plyr, devtools, and more)
        \item ggplot and reshape made up most of his PhD thesis
      \end{itemize}
    \end{column}
    \begin{column}{0.5\textwidth}
      \includegraphics[width = \textwidth, keepaspectratio = true]{figure/hw}
    \end{column}
  \end{columns}

\end{frame}

\begin{frame}
  \frametitle{Grammar of Graphics}
  \begin{columns}
    \begin{column}{0.5\textwidth}
      object-oriented approach to graphics where we have our graph ``object'' and we add to and modify the state of it\\
      \begin{itemize}
        \item variables
        \item aesthetics
        \item geometry
        \item statistics
        \item facets
        \item scales, etc.
      \end{itemize}
    \end{column}
    \begin{column}{0.5\textwidth}
      \includegraphics[width = \textwidth, keepaspectratio = true]{figure/grammar}
    \end{column}
  \end{columns}

\end{frame}

\begin{frame}
  \frametitle{Basics}
  \texttt{ggplot()} is the basic call, but does not produce a meaningful graph.

  \texttt{aes()} is for aesthetics (x value, y value, group, colour).

  \texttt{geom\_*()} are geometries (points, bars, etc.).

  \texttt{stat\_*()} are statistics (densities, smooths, functions, etc.).

  \texttt{facet\_*()} faceting options and types.

  \texttt{theme()} is for various theming options (used to be called \texttt{opts()}).

  \texttt{scale\_*()} are various scaling options (see scales package for better selection).

\end{frame}

\begin{frame}[fragile]
  \frametitle{Basics}
  standard invocations of \texttt{ggplot()}

<<eval = FALSE>>=
ggplot(df)
ggplot(df, aes(x = x, y = y))
ggplot()
@

  df \textbf{must} be a data frame. x and y are columns of df.
  
  creates an object of class ``ggplot'' which you probably want to assign (\texttt{<-}) to something.

  we can then modify this object to give it geometries, statistics, themes, etc.

\end{frame}

\begin{frame}[fragile]
  \frametitle{Adding to a ggplot object}
<<eval = FALSE>>=
g <- ggplot(df, aes(x = x, y = y)) + geom_point()
g <- g + stat_smooth(method = 'lm')
@

  using the ``+'' operator, we can add attributes to a ggplot object.

\end{frame}

\begin{frame}
  \frametitle{Before we go to far, RStudio}
  \includegraphics[height = 0.8\textheight, keepaspectratio = true]{figure/rstudio}

\end{frame}

\begin{frame}
  \frametitle{Today's first data}

  the muscle car data set!

  \Sexpr{nrow(mtcars)} cars for \Sexpr{ncol(mtcars)} variables.

<<mtc, results = 'asis', echo = FALSE>>=
library(xtable)
xtable(head(mtcars)[, 1:6])
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Our first graph}
<<first, fig.width = 3, fig.height = 2.5>>=
g1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
g1
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Adding a stat and modifying our first graph}
<<first-modify, fig.width = 4, fig.height = 2.5>>=
g1 <- g1 + stat_smooth(method = 'lm')
g1 <- g1 + geom_point(aes(colour = factor(cyl)))
g1
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Try and make it look prettier}
<<first-line, fig.width = 3, fig.height = 2.4, tidy = FALSE, size = 'scriptsize'>>=
g1 <- g1 + theme(legend.position = 'none',
                 axis.line = element_line(colour = 'black'),
                 panel.background = element_blank())
g1
@
\end{frame}

\begin{frame}[fragile]
  \frametitle{Our second graph}
<<second, tidy = FALSE>>=
g2 <- ggplot(mtcars, 
             aes(x = factor(cyl), 
                 y = mpg, 
                 fill = factor(cyl)))
g2 <- g2 + geom_boxplot()
g2 <- g2 + theme(legend.position = 'none',
                 panel.background = element_blank(),
                 panel.grid = element_blank())
g2 <- g2 + labs(x = 'cylinders', 
                y = 'miles per gallon',
                title = 'example box plot')
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Our second graph}
<<second-plot, echo = FALSE, fig.height = 4, fig.width = 5>>=
g2
@

\end{frame}

\begin{frame}
  \frametitle{Today's second dataset}

  diamonds!

  \Sexpr{nrow(diamonds)} samples for \Sexpr{ncol(diamonds)} variables.

<<results = 'asis', echo = FALSE>>=
xtable(head(diamonds)[, 1:7])
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Looking at diamonds}
<<dia, tidy = FALSE, fig.width = 4, fig.height = 2.5>>=
d <- ggplot(diamonds, aes(x = carat, y = price, 
                          colour = clarity))
d <- d + geom_point(alpha = 0.3, size = 0.7)
d
@

\end{frame}

\begin{frame}[fragile]
  \frametitle{Make that look better}
<<dia2, tidy = FALSE, fig.width = 4, fig.height = 2.5, message = FALSE, size = 'scriptsize'>>=
library(scales)
d <- d + scale_y_continuous(trans = log_trans())
d <- d + stat_smooth()
d <- d + theme(panel.background = element_blank(),
               panel.border = element_rect(colour = 'black', 
                                           fill = NA),
               legend.position = 'none')
@

\end{frame}

\begin{frame}[fragile]
<<dia2-plot, echo = FALSE, fig.height = 4, fig.width = 5, message = FALSE>>=
d
@
\end{frame}

\begin{frame}[fragile]
  \frametitle{More diamonds}
<<dia3, tidy = FALSE, fig.width = 4, fig.height = 2.5, message = FALSE>>=
d2 <- ggplot(diamonds, 
             aes(x = clarity, fill = cut))
d2 <- d2 + geom_bar()
d2 + coord_flip()
@
\end{frame}

\begin{frame}[fragile]
  \frametitle{Make pretty}
<<dia3-upgrade, tidy = FALSE, fig.width = 4, fig.height = 2, message = FALSE>>=
d2 <- d2 + facet_wrap(~ cut)
d2 <- d2 + theme(legend.position = 'none',
                 axis.text = element_text(size = 4),
                 axis.title = element_text(size = 7),
                 strip.text = element_text(size = 6))
d2
@
\end{frame}


\begin{frame}
  \frametitle{Other useful packages}

  GGally: matrix plots.

  ggthemes: various canned themes to make your plots prettier (or hilariously ugly).

  plyr: generalized apply type functions. split-apply-combine approach to data munging.

  reshape2: manipulate the layout and structure of a matrix/data.frame. more data munging.

\end{frame}

\begin{frame}
  \frametitle{Useful websites}

  \url{http://docs.ggplot2.org/current/} : current ggplot documentation (very good)

  \url{http://groups.google.com/group/ggplot2} : ggplot2 mailing list

  \url{http://wiki.stdout.org/rcookbook/Graphs} : various tips and tricks to get over problems

  \url{http://stackoverflow.com/} : coding question/answer site

  \url{http://stats.stackexchange.com/} : statistics question/answer site

  \url{http://www.r-bloggers.com/} : R blog aggregator

\end{frame}


\end{document}
